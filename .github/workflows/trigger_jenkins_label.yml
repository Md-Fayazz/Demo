name: Trigger Jenkins Job on Label

on:
  pull_request:
    types:
      - labeled

jobs:
  trigger_jenkins:
    runs-on: ubuntu-latest

    steps:
      - name: Check PR Label
        id: check_label
        run: echo ::set-output name=label::${{ github.event.label.name }}

      - name: Trigger Jenkins Job
        if: steps.check_label.outputs.label == 'Check'
        run: |
          JENKINS_JOB_URL=${{ secrets.JENKINS_URL }}
          JENKINS_USERNAME=${{ secrets.JENKINS_USERNAME }}
          JENKINS_TOKEN=${{ secrets.JENKINS_API_TOKEN }}

          # Replace 'your_job_name' with the name of your Jenkins job
          JOB_NAME="Pull_and_merge"

          # Construct the Jenkins job URL with parameters
          JOB_URL="${JENKINS_JOB_URL}/job/${JOB_NAME}/buildWithParameters?REPO_NAME=${{ github.repository }}&PR_NUMBER=${{ github.event.pull_request.number }}"

          # Trigger the Jenkins job with parameters using cURL
          curl -X POST -u $JENKINS_USERNAME:$JENKINS_TOKEN $JOB_URL

      - name: Update GitHub Check Run
        id: update_check_run
        run: |
          GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          PR_NUMBER=${{ github.event.pull_request.number }}
          JOB_URL="${JENKINS_JOB_URL}/job/${JOB_NAME}/${PR_NUMBER}"

          # Create JSON payload for updating the check run
          PAYLOAD=$(jq -n --arg url "$JOB_URL" '{ "output": { "title": "Jenkins Job Information", "summary": "The following Jenkins job was triggered:", "text": "Jenkins job triggered: \($url)" } }')

          # Update the existing GitHub check run using the GitHub API
          curl -X PATCH -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" -d "$PAYLOAD" "https://api.github.com/repos/${{ github.repository }}/check-runs/${{ github.run_id }}"
