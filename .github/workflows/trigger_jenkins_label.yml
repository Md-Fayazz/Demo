name: Trigger Jenkins Job on Label

on:
  pull_request:
    types:
      - labeled

jobs:
  trigger_jenkins:
    runs-on: ubuntu-latest

    steps:
      - name: Check PR Label
        id: check_label
        run: echo ::set-output name=label::${{ github.event.label.name }}

      - name: Trigger Jenkins Job
        if: steps.check_label.outputs.label == 'Check'
        run: |
          JENKINS_JOB_URL=${{ secrets.JENKINS_URL }}
          JENKINS_USERNAME=${{ secrets.JENKINS_USERNAME }}
          JENKINS_TOKEN=${{ secrets.JENKINS_API_TOKEN }}

          # Replace 'your_job_name' with the name of your Jenkins job
          JOB_NAME="Pull_and_merge"

          # Construct the Jenkins job URL with parameters
          JOB_URL="${JENKINS_JOB_URL}/job/${JOB_NAME}/buildWithParameters?REPO_NAME=${{ github.repository }}&PR_NUMBER=${{ github.event.pull_request.number }}"

          # Trigger the Jenkins job with parameters using cURL
          curl -X POST -u $JENKINS_USERNAME:$JENKINS_TOKEN $JOB_URL

      - name: Update Check Run Description
        id: update_check_description
        run: |
          JENKINS_JOB_URL=${{ secrets.JENKINS_URL }}
          JOB_NAME="Pull_and_merge"
          JOB_URL="${JENKINS_JOB_URL}/job/${JOB_NAME}/buildWithParameters?REPO_NAME=${{ github.repository }}&PR_NUMBER=${{ github.event.pull_request.number }}"
          
          # Update the check run description with a direct link to the Jenkins job URL
          echo "Jenkins job URL: $JOB_URL" > check_description.txt
          curl -X POST \
            -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"body": "Details: ['"$JOB_NAME"']('"$JOB_URL"')"}' \
            "https://api.github.com/repos/${{ github.repository }}/check-runs/${{ github.run_id }}/annotations"

