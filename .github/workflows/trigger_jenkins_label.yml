name: Trigger Jenkins Job on Label

on:
  pull_request:
    types:
      - labeled

jobs:
  trigger_jenkins:
    runs-on: ubuntu-latest

    steps:
      - name: Check PR Label
        id: check_label
        run: echo ::set-output name=label::${{ github.event.label.name }}

      - name: Trigger Jenkins Job
        if: steps.check_label.outputs.label == 'Check'
        run: |
          JENKINS_JOB_URL=${{ secrets.JENKINS_URL }}
          JENKINS_USERNAME=${{ secrets.JENKINS_USERNAME }}
          JENKINS_TOKEN=${{ secrets.JENKINS_API_TOKEN }}

          # Replace 'your_job_name' with the name of your Jenkins job
          JOB_NAME="Pull_and_merge"

          # Construct the Jenkins job URL with parameters
          JOB_URL="${JENKINS_JOB_URL}/job/${JOB_NAME}/buildWithParameters?REPO_NAME=${{ github.repository }}&PR_NUMBER=${{ github.event.pull_request.number }}"

          # Trigger the Jenkins job with parameters using cURL
          curl -X POST -u $JENKINS_USERNAME:$JENKINS_TOKEN $JOB_URL

          # Update the check run description with the Jenkins job URL
          GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          RUN_ID=${{ github.run_id }}
          REPO_OWNER=${{ github.repository_owner }}
          REPO_NAME=${{ github.repository }}
          JOB_DESCRIPTION="Jenkins job triggered: [$JOB_NAME]($JOB_URL)"

          # Create a JSON payload with the new description
          PAYLOAD=$(echo '{}' | jq --arg body "$JOB_DESCRIPTION" '.body = $body')

          # Update the check run description using the GitHub API
          curl -X PATCH \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.antiope-preview+json" \
            -d "$PAYLOAD" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/check-runs/$RUN_ID"

