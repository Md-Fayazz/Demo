name: Trigger Jenkins Job on Label

on:
  pull_request:
    types:
      - labeled

jobs:
  trigger_jenkins:
    runs-on: ubuntu-latest

    steps:
      - name: Check PR Label
        id: check_label
        run: echo ::set-output name=label::${{ github.event.label.name }}

      - name: Trigger Jenkins Job
        if: steps.check_label.outputs.label == 'Check'
        run: |
          JENKINS_JOB_URL=${{ secrets.JENKINS_URL }}
          JENKINS_USERNAME=${{ secrets.JENKINS_USERNAME }}
          JENKINS_TOKEN=${{ secrets.JENKINS_API_TOKEN }}

          # Replace 'your_job_name' with the name of your Jenkins job
          JOB_NAME="Pull_and_merge"

          # Construct the Jenkins job URL with parameters
          JOB_URL="${JENKINS_JOB_URL}/job/${JOB_NAME}/buildWithParameters?REPO_NAME=${{ github.repository }}&PR_NUMBER=${{ github.event.pull_request.number }}"

          # Trigger the Jenkins job with parameters using cURL
          curl -X POST -u $JENKINS_USERNAME:$JENKINS_TOKEN $JOB_URL

      - name: Display Jenkins Job Information
        id: display_job_info
        run: |
          echo "::set-output name=job_info::Triggered Jenkins job: $JOB_NAME"
        
      # The following step creates a GitHub check run with information about the Jenkins job.
      - name: Create GitHub Check Run
        id: create_check_run
        uses: actions/create-check@v1
        with:
          name: Jenkins Job Triggered
          conclusion: success
          output: |
            {
              "title": "Jenkins Job Information",
              "summary": "The following Jenkins job was triggered:",
              "text": "${{ steps.display_job_info.outputs.job_info }}"
            }
     
