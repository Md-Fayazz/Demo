name: Check Jenkins Job

on:
  pull_request:
    types:
      - opened

jobs:
  check_jenkins_job:
    runs-on: ubuntu-latest

    steps:
      - name: Check Jenkins Job Status
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USERNAME: ${{ secrets.JENKINS_USERNAME }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
        run: |
          # Your script to check Jenkins job status here
          # For example, using curl and parsing the JSON response
          job_name="jenkins_Pull_request _new"
          job_status=$(curl -s -u $JENKINS_USERNAME:$JENKINS_API_TOKEN "$JENKINS_URL/job/$job_name/lastBuild/api/json" | jq -r '.result')
          
          if [ "$job_status" = "SUCCESS" ]; then
            echo "Jenkins job succeeded!"
            echo "Jenkins Job URL: $JENKINS_URL/job/$job_name/${{ github.event.pull_request.number }}"
            echo "::set-output name=jenkins_status::success"
            echo "::set-output name=jenkins_url::$JENKINS_URL/job/$job_name/${{ github.event.pull_request.number }}"
          else
            echo "Jenkins job failed."
            echo "::set-output name=jenkins_status::failure"
          fi
          
      - name: Set Jenkins Status Check
        id: set_jenkins_status
        uses: peter-evans/create-pull-request-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Jenkins Job Status: ${{ steps.check_jenkins_job.outputs.jenkins_status }}
            Jenkins Job URL: [Jenkins Job URL](${{ steps.check_jenkins_job.outputs.jenkins_url }})
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
