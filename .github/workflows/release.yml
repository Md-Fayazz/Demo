name: Create GitHub Release on Merge

on:
  pull_request:
    types:
      - closed

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR is merged into release branch
        id: check_merged_into_release
        if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'release'
        run: echo "PR is merged into the release branch"

      - name: Get the latest tag using GitHub API
        id: get_latest_tag
        if: steps.check_merged_into_release.outputs.result
        run: |
          echo "Running get latest tag step"
          latest_tag=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/git/refs/tags" | jq -r '.[0].ref')
          latest_tag="${latest_tag#refs/tags/}"  # Remove "refs/tags/" prefix
          echo "Latest tag is: $latest_tag"
          echo "::set-output name=tag::$latest_tag"


      - name: Create Tag
        id: create_tag
        if: steps.check_merged_into_release.outputs.result
        run: |
          echo "Running create tag step"
          git tag -a ${{ steps.get_latest_tag.outputs.tag }} -m "Tag for release ${{ steps.get_latest_tag.outputs.tag }}"
          git push origin ${{ steps.get_latest_tag.outputs.tag }}

      - name: Create GitHub Release
        id: create_release
        if: steps.check_merged_into_release.outputs.result
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.get_latest_tag.outputs.tag }}
          release_name: Release ${{ steps.get_latest_tag.outputs.tag }}
          body: Release notes go here  # Customize this as needed
